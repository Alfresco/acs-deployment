---
name: helm-test
on:
  pull_request:
    branches:
      - 'master'
    paths:
      - 'helm/**'
      - 'test/postman/helm/**'
      - '.github/workflows/helm*'
      - '.pre-commit-config.d/helm.yaml'
  push:
    branches:
      - 'master'
      - pr-*
jobs:
  build_vars:
    runs-on: ubuntu-latest
    outputs:
      commit_message: ${{ steps.compute_vars.outputs.commit_message }}
      branch_name: ${{ steps.compute_vars.outputs.branch_name }}
      json_charts: ${{ steps.getcharts.outputs.json }}
    steps:
      - uses: >-
          Alfresco/alfresco-build-tools/.github/actions/setup-helm-docs@v1.16.0
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: Alfresco/alfresco-build-tools/.github/actions/pre-commit@v1.16.0
      - uses: >-
          Alfresco/alfresco-build-tools/.github/actions/get-commit-message@v1.16.0
      - id: compute_vars
        name: Evaluate build vars and set to ENV
        run: |
          BRANCH_NAME=${GITHUB_HEAD_REF:-$GITHUB_REF_NAME}
          echo "Commit message is $COMMIT_MESSAGE"
          echo "::set-output name=commit_message::$COMMIT_MESSAGE"
          echo "Branch name is $BRANCH_NAME"
          echo "::set-output name=branch_name::$BRANCH_NAME"
      - id: getcharts
        uses: >-
          ./.github/actions/charts-as-json
        with:
          charts-root: helm
  helm_unit_test:
    needs:
      - build_vars
    strategy:
      matrix: ${{ fromJSON(needs.build_vars.outputs.json_charts) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: >-
          Alfresco/alfresco-build-tools/.github/actions/build-helm-chart@v1.16.0
        with:
          chart-dir: helm/${{ matrix.charts.name }}
      - uses: >-
          Alfresco/alfresco-build-tools/.github/actions/helm-unit-tests@v1.16.0
        with:
          chart-dir: helm/${{ matrix.charts.name }}
          chart-type: ${{ matrix.charts.type }}
  libraries_outcome:
    needs:
      - build_vars
      - helm_unit_test
    runs-on: ubuntu-latest
    steps:
      - name: Prepare library charts artifact
        run: |
          mkdir -p "${{ needs.build_vars.outputs.branch_name }}"
          echo '${{ toJSON(fromJSON(needs.build_vars.outputs.json_charts)) }}' \
          | jq 'del(.charts[] | select(.type!="library"))' >\
          ${{ needs.build_vars.outputs.branch_name }}/${GITHUB_WORKFLOW}.json
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.workflow }}
          path: ${{ needs.build_vars.outputs.branch_name }}/
  community_charts:
    runs-on: ubuntu-latest
    needs:
      - helm_unit_test
    steps:
      - uses: actions/checkout@v3
      - name: Kind Cluster
        uses: helm/kind-action@v1.4.0
        with:
          config: test/kind-ingress-enabled-cluster.yaml
      - name: Install NGINX ingress
        env:
          NGINX_MANIFEST: |
            https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
        run: |
          kubectl apply -f ${{ env.NGINX_MANIFEST }}
      - name: Use local dependencies
        run: |
          yq e -i 'del(.dependencies[] | select(.name=="alfresco-common").repository)' helm/alfresco-content-services/Chart.yaml
          helm package --dependency-update --destination helm/alfresco-content-services/charts helm/alfresco-common
          tar zxf helm/alfresco-content-services/charts/alfresco-common-0.1.0-SNAPSHOT.tgz -C helm/alfresco-content-services/charts/
      - name: Community local deployment
        env:
          VALUES: |
            repository:
              resources:
                requests:
                  memory: "1024Mi"
                limits:
                  memory: "1560Mi"
              edition: Community
              replicaCount: 1
              image:
                repository: alfresco/alfresco-content-repository-community
            share:
              resources:
                requests:
                  memory: "256Mi"
                limits:
                  memory: "512Mi"
              replicaCount: 1
              image:
                repository: alfresco/alfresco-share
            pdfrenderer:
              resources:
                requests:
                  memory: "256Mi"
                limits:
                  memory: "512Mi"
              replicaCount: 1
            imagemagick:
              resources:
                requests:
                  memory: "256Mi"
                limits:
                  memory: "512Mi"
              replicaCount: 1
            libreoffice:
              resources:
                requests:
                  memory: "512Mi"
                limits:
                  memory: "1024Mi"
              replicaCount: 1
            tika:
              resources:
                requests:
                  memory: "256Mi"
                limits:
                  memory: "512Mi"
              replicaCount: 1
            transformmisc:
              resources:
                requests:
                  memory: "256Mi"
                limits:
                  memory: "512Mi"
              replicaCount: 1
            alfresco-search:
              resources:
                requests:
                  memory: "512Mi"
                limits:
                  memory: "1024Mi"
              searchServicesImage:
                repository: alfresco/alfresco-search-services
            # Disable features
            alfresco-digital-workspace:
              enabled: false
            alfresco-sync-service:
              syncservice:
                enabled: false
            postgresql-syncservice:
              enabled: false
            ai:
              enabled: false
            s3connector:
              enabled: false
            email:
              server:
                enabled: false
              inbound:
                enabled: false
            imap:
              server:
                enabled: false
        run: |
          helm dep up ./helm/alfresco-content-services
          helm install acs ./helm/alfresco-content-services \
            --set global.tracking.sharedsecret="$(openssl rand -hex 24)" \
            --set externalPort="80" --set externalProtocol="http" \
            --set externalHost="localhost" --wait --timeout 10m0s --values - \
            < <(echo "$VALUES")
      - name: Spit cluster status
        if: always()
        run: |
          helm ls --all-namespaces --all
          kubectl get all
          kubectl -n ingress-nginx logs services/ingress-nginx-controller
      - name: run Postman tests
        uses: matt-ball/newman-action@v1.0.4
        with:
          collection: test/postman/helm/acs-test-helm-collection.json
          insecure: true
          globalVar: >-
            [
              {"key": "protocol", "value": "http"},
              {"key": "url", "value": "localhost"}
            ]
