---
name: publish
on:
  workflow_run:
    workflows:
      - verify
    types:
      - completed
jobs:
  prepare_releases:
    if: >-
      github.event.workflow_run.conclusion == 'success' &&
      (
        contains(github.event.workflow_run.head_commit.message, '[publish]') ||
        github.ref_name == github.event.repository.default_branch
      )
    runs-on: ubuntu-latest
    outputs:
      releases: ${{ steps.read_releases.outputs.json }}
    steps:
      - name: Debug action
        uses: hmarr/debug-action@v2.0.1
      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "${{ github.event.workflow.name }}"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(
              `${process.env.GITHUB_WORKSPACE}/${{ github.event.workflow.name }}.zip`,
              Buffer.from(download.data)
            );
      - name: Build release matrix
        id: read_releases
        run: |
          RELEASES=$(unzip -p ${{ github.event.workflow.name }}.zip | jq -c '.')
          echo "::set-output name=json::$RELEASES"
  publish:
    if: >-
      github.event.workflow_run.conclusion == 'success' &&
      (
        contains(github.event.workflow_run.head_commit.message, '[publish]') ||
        github.ref_name == github.event.repository.default_branch
      )
    runs-on: ubuntu-latest
    needs:
      - prepare_releases
    strategy:
      matrix: ${{ fromJSON(needs.prepare_releases.outputs.releases) }}
    outputs:
      releases: ${{ steps.read_releases.outputs.json }}
    steps:
      - name: publish chart
        uses: >-
          ./.github/actions/publish-charts
