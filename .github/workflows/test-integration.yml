---
name: integration-test
on:
  workflow_run:
    workflows:
      - helm
    types:
      - completed
jobs:
  app_charts:
    runs-on: ubuntu-latest
    outputs:
      app_json: ${{ steps.app_charts.outputs.json }}
      ver_json: ${{ steps.app_versions.outputs.json }}
      name_json: ${{ steps.app_versions.outputs.json }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: getcharts
        uses: >-
          ./.github/actions/charts-as-json
        with:
          charts-root: helm
      - id: app_charts
        run: |
          APPS=$(echo '${{ toJSON(fromJSON(steps.getcharts.outputs.json)) }}' |\
          jq -c 'del(.charts[] | select(.type=="library"))')
          echo "::set-output name=json::$APPS"
      - id: app_versions
        run: |
          APPS=$(echo '${{ toJSON(fromJSON(steps.getcharts.outputs.json)) }}' |\
          jq -c 'del(.charts[] | select(.type=="library")) | .charts[].version | split("\n")')
          echo "::set-output name=json::$APPS"
      - id: app_names
        run: |
          APPS=$(echo '${{ toJSON(fromJSON(steps.getcharts.outputs.json)) }}' |\
          jq -c 'del(.charts[] | select(.type=="library")) | .charts[].name | split("\n")')
          echo "::set-output name=json::$APPS"
  helm_integration:
    if: >-
      github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    needs:
      - app_charts
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        acs_version: ${{ fromJSON(needs.app_charts.outputs.ver_json) }}
        acs_name: ${{ fromJSON(needs.app_charts.outputs.name_json) }}
    steps:
      - name: Create valid version string
        id: version
        run: |
          echo "::set-output name=acs_version::$(echo ${{ matrix.acs_version }} | sed 's/\.//g' | tr '[:upper:]' '[:lower:]')"
      - uses: >-
          Alfresco/alfresco-build-tools/.github/actions/dbp-charts/verify-helm@master
        with:
          acs_version: ${{ matrix.acs_version }}
          aws_access_key_id: ${{ secrets.ACS_CLUSTER_AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.ACS_CLUSTER_AWS_SECRET_ACCESS_KEY }}
          docker_username: ${{ secrets.DOCKER_USERNAME }}
          docker_password: ${{ secrets.DOCKER_PASSWORD }}
          quay_username: ${{ secrets.QUAY_USERNAME }}
          quay_password: ${{ secrets.QUAY_PASSWORD }}
          acm_certificate: ${{ secrets.ACM_CERTIFICATE }}
          aws_sg: ${{ secrets.AWS_SG }}
          release_prefix: acs-${{ steps.version.outputs.acs_version }}
          chart_name: ${{ matrix.acs_name }}
          test_newman: 'true'
  applications_outcome:
    needs:
      - app_charts
      - helm_integration
    runs-on: ubuntu-latest
    steps:
      - name: Prepare library charts artifact
        run: |
          mkdir -p "${{ github.ref_name }}"
          echo '${{ toJSON(fromJSON(needs.app_charts.outputs.app_json)) }}' |\
          jq 'del(.charts[] | select(.type=="library"))' >\
          ${{ github.ref_name }}/${GITHUB_WORKFLOW}.json
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.workflow }}
          path: ${{ github.ref_name }}/
