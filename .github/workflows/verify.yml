---
name: verify
on:
  pull_request:
    branches:
      - 'master'
  push:
    branches:
      - 'master'
      - pr-*
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: >-
          Alfresco/alfresco-build-tools/.github/actions/setup-helm-docs@v1.6.0
      - uses: Alfresco/alfresco-build-tools/.github/actions/pre-commit@v1.6.0
  build_vars:
    needs:
      - pre-commit
    runs-on: ubuntu-latest
    outputs:
      commit_message: ${{ steps.compute_vars.outputs.commit_message }}
      branch_name: ${{ steps.compute_vars.outputs.branch_name }}
      json_charts: ${{ steps.getcharts.outputs.json }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: >-
          Alfresco/alfresco-build-tools/.github/actions/get-commit-message@v1.14.0
      - id: compute_vars
        name: Evaluate build vars and set to ENV
        run: |
          BRANCH_NAME=${GITHUB_HEAD_REF:-$GITHUB_REF_NAME}
          echo "Commit message is $COMMIT_MESSAGE"
          echo "::set-output name=commit_message::$COMMIT_MESSAGE"
          echo "Branch name is $BRANCH_NAME"
          echo "::set-output name=branch_name::$BRANCH_NAME"
      - id: getcharts
        name: Get main Charts and parse manifest
        env:
          YQ_FILTER: >
            {"name": .name,"type": .type, "version": .version} | to_json
        run: |
          for CHART_ROOT in helm/*/; do
            CHART=$(basename $CHART_ROOT)
            MATRIX_TMP_FILE=$(mktemp /tmp/${CHART}.XXXXXX)
            VALUES_FILES=$(ls -r helm/"${CHART}"/*values.yaml 2>/dev/null || true)
            VALUES=${VALUES_FILES//${CHART_ROOT}/}
            yq e "$YQ_FILTER" "helm/${CHART}/Chart.yaml" | \
            jq -c --arg v "${VALUES:-[]}" '.values=$v' > $MATRIX_TMP_FILE
          done
          echo "::set-output name=json::$(jq -sc '{charts:.}' $MATRIX_TMP_FILE)"
  helm_unit_test:
    needs:
      - build_vars
    strategy:
      matrix: ${{ fromJSON(needs.build_vars.outputs.json_charts) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: >
          Alfresco/alfresco-build-tools/.github/actions/build-helm-chart@v1.14.0
        with:
          chart-dir: helm/${{ matrix.charts.name }}
      - run: |
          helm plugin install https://github.com/vbehar/helm3-unittest && \
          helm dep up && \
          if [ -d tests ]; then echo "${{ matrix.charts.name }}: Unit tests"
            helm unittest --color .
          else
            [ "${{ matrix.charts.type }}" != "library" ] && \
            echo "No Unit tests implemented for ${{ matrix.charts.name }}!"
          fi
        working-directory: helm/${{ matrix.charts.name }}
  helm:
    needs:
      - pre-commit
      - build_vars
    if: '! github.event.pull_request.head.repo.fork'
    strategy:
      max-parallel: 1  # otherwise flaky problems with aws ELB
      fail-fast: false
      matrix:
        acs_version:
          - latest
          - 7.2.N
          - 7.1.N
          - 7.0.N
          - 6.2.N
          - community
    runs-on: ubuntu-latest
    env:
      DOMAIN: dev.envalfresco.com
      AWS_ACCESS_KEY_ID: ${{ secrets.ACS_CLUSTER_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.ACS_CLUSTER_AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-1
      - uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.23.6'
      - if: matrix.acs_version != 'community'
        name: Login to Quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Get commit msg
        run: |
          MSG=$(git log --format=%B -n 1 ${{github.event.after}})
          echo COMMIT_MESSAGE=\"$MSG\" >> $GITHUB_ENV
      - name: Run helm chart tests
        run: .github/scripts/helm_install.sh
        shell: bash
        env:
          ACM_CERTIFICATE: ${{ secrets.ACM_CERTIFICATE }}
          AWS_SG: ${{ secrets.AWS_SG }}
          ACS_VERSION: ${{ matrix.acs_version }}
          BRANCH_NAME: ${{ needs.build_vars.outputs.branch_name }}
  publish:
    needs:
      - helm
      - build_vars
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        chart:
          - alfresco-common
          - alfresco-content-service
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get commit msg
        run: |
          MSG=$(git log --format=%B -n 1 ${{github.event.after}})
          echo COMMIT_MESSAGE=\"$MSG\" >> $GITHUB_ENV
      - name: Publish
        run: .github/scripts/publish_chart.sh ${{ matrix.chart }}
        shell: bash
        if: >-
          github.ref_name == github.event.repository.default_branch ||
          contains(env.COMMIT_MESSAGE, format('[publish {0}]', matrix.chart))
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ secrets.BOT_GITHUB_USERNAME }}
          GITHUB_EMAIL: ${{ secrets.BOT_GITHUB_EMAIL }}
          BRANCH_NAME: ${{ needs.build_vars.outputs.branch_name }}
