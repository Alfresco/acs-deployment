---
name: charts_matrix
inputs:
  artifact:
    required: true
    description: artifact name to download
    type: string
outputs:
  charts:
    description: matrix object named charts
    value: ${{ steps.read_charts.outputs.json }}
description: Build charts Matrix object from JSON artifact
runs:
  using: composite
  steps:
    - name: 'Download artifact'
      uses: actions/github-script@v6
      with:
        script: |
          let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts(
            {
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            }
          );
          let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
            return artifact.name == "${{ inputs.artifact }}"
          })[0];
          let download = await github.rest.actions.downloadArtifact({
             owner: context.repo.owner,
             repo: context.repo.repo,
             artifact_id: matchArtifact.id,
             archive_format: 'zip',
          });
          let fs = require('fs');
          fs.writeFileSync(
            `${process.env.GITHUB_WORKSPACE}/artifact.zip`,
            Buffer.from(download.data)
          );
    - name: Build release matrix
      id: read_charts
      run: |
        RELEASES=$(unzip -p artifact.zip | jq -c '.')
        echo "::set-output name=json::$RELEASES"
      shell: bash
