# Defines the deployment for the tika transformer app
# Details: https://git.alfresco.com/Repository/alfresco-docker-transformers
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "content-services.shortname" . }}-tika
  labels:
    {{- include "tika.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.tika.replicaCount }}
  selector:
    matchLabels:
      {{- include "tika.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
{{ toYaml .Values.global.strategy.rollingUpdate | indent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config-tika.yaml") . | sha256sum }}
      labels:
        {{- include "tika.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.global.alfrescoRegistryPullSecrets }}
      # only set this secret if a private docker registry variable is defined
      imagePullSecrets:
        - name: {{ .Values.global.alfrescoRegistryPullSecrets }}
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 10
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "content-services.shortname" . }}-tika
              topologyKey: failure-domain.beta.kubernetes.io/zone
          - weight: 5
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "content-services.shortname" . }}-tika
              topologyKey: kubernetes.io/hostname
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.tika.image.repository }}:{{ .Values.tika.image.tag }}"
          imagePullPolicy: {{ .Values.tika.image.pullPolicy }}
          envFrom:
          - configMapRef:
              # config map to use, defined in config-tika.yaml
              name: {{ template "content-services.shortname" . }}-tika-configmap
          ports:
            - containerPort: {{ .Values.tika.image.internalPort }}
          resources:
{{ toYaml .Values.tika.resources | indent 12 }}
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.tika.image.internalPort }}
            initialDelaySeconds: {{ .Values.tika.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.tika.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.tika.readinessProbe.timeoutSeconds }}
          livenessProbe:
            httpGet:
              path: /live
              port: {{ .Values.tika.image.internalPort }}
            initialDelaySeconds: {{ .Values.tika.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.tika.livenessProbe.periodSeconds }}
            failureThreshold: 1
            timeoutSeconds: {{ .Values.tika.livenessProbe.timeoutSeconds }}
