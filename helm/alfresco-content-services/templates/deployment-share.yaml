# Defines the deployment for the alfresco share app
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "content-services.shortname" . }}-share
  labels:
    {{- include "share.labels" . | nindent 4 }}
  annotations:
    checkov.io/skip1: CKV_K8S_23=Requires APPS-1832 first
    checkov.io/skip2: CKV_K8S_40=Requires APPS-1832 first
spec:
  replicas: {{ .Values.share.replicaCount }}
  selector:
    matchLabels:
      {{- include "share.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
{{ toYaml .Values.global.strategy.rollingUpdate | indent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config-share.yaml") . | sha256sum }}
      labels:
        {{- include "share.selectorLabels" . | nindent 8 }}
    spec:
    {{- include "component-pod-security-context" .Values.share | indent 4 }}
    {{- if .Values.share.nodeSelector }}
      nodeSelector: {{- .Values.share.nodeSelector | toYaml | nindent 8 }}
    {{- end }}
      {{- include "alfresco-content-services.imagePullSecrets" . | indent 6 }}
      containers:
        {{- if .Values.share.extraSideContainers }}
{{ tpl .Values.share.extraSideContainers . | indent 8 }}
        {{- end }}
        - name: {{ .Chart.Name }}
          image: "{{ .Values.share.image.repository }}:{{ .Values.share.image.tag }}"
          imagePullPolicy: {{ .Values.share.image.pullPolicy }}
          {{- include "component-security-context" .Values.share | indent 8 }}
          {{- if .Values.share.command }}
          command:
{{ tpl .Values.share.command . | indent 12 }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.share.image.internalPort }}
          resources:
{{ toYaml .Values.share.resources | indent 12 }}
          envFrom:
          - configMapRef:
              name: {{ template "content-services.shortname" . }}-share-configmap
          {{- if .Values.share.extraVolumeMounts }}
          volumeMounts:
{{ toYaml .Values.share.extraVolumeMounts | indent 10 }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /share
              port: {{ .Values.share.image.internalPort }}
            initialDelaySeconds: {{ .Values.share.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.share.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.share.readinessProbe.timeoutSeconds }}
          livenessProbe:
            httpGet:
              path: /share
              port: {{ .Values.share.image.internalPort }}
            initialDelaySeconds: {{ .Values.share.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.share.livenessProbe.periodSeconds }}
            failureThreshold: 1
            timeoutSeconds: {{ .Values.share.livenessProbe.timeoutSeconds }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "sleep 20"]
      {{- if .Values.share.extraInitContainers }}
      initContainers:
{{ tpl .Values.share.extraInitContainers . | indent 8 }}
      {{- end }}
      {{- if .Values.share.extraVolumes }}
      volumes:
{{ toYaml .Values.share.extraVolumes | indent 6 }}
      {{- end }}
