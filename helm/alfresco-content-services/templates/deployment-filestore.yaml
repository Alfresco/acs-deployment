# Defines the deployment for the shared file store
# Details: https://git.alfresco.com/Repository/alfresco-shared file store
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "alfresco.shortname" . }}-filestore
  labels:
    app: {{ template "alfresco.shortname" . }}-filestore
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: transformers
spec:
  replicas: {{ .Values.filestore.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
{{ toYaml .Values.global.strategy.rollingUpdate | indent 6 }}
  template:
    annotations:
      checksum/config: {{ include (print $.Template.BasePath "/config-filestore.yaml") . | sha256sum }}
    metadata:
      labels:
        app: {{ template "alfresco.shortname" . }}-filestore
        release: {{ .Release.Name }}
        component: transformers
    spec:
      {{- if .Values.global.alfrescoRegistryPullSecrets }}
      # only set this secret if a private docker registry variable is defined
      imagePullSecrets:
        - name: {{ .Values.global.alfrescoRegistryPullSecrets }}
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 10
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "alfresco.shortname" . }}-filestore
              topologyKey: failure-domain.beta.kubernetes.io/zone
          - weight: 5
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "alfresco.shortname" . }}-filestore
              topologyKey: kubernetes.io/hostname
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.filestore.image.repository }}:{{ .Values.filestore.image.tag }}"
          imagePullPolicy: {{ .Values.filestore.image.pullPolicy }}
          envFrom:
          - configMapRef:
              # config map to use, defined in config-filestore.yaml
              name: {{ template "alfresco.shortname" . }}-filestore-configmap
          ports:
            - containerPort: {{ .Values.filestore.image.internalPort }}
          resources:
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.filestore.image.internalPort }}
            initialDelaySeconds: {{ .Values.filestore.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.filestore.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.filestore.readinessProbe.timeoutSeconds }}
          livenessProbe:
            httpGet:
              path: /live
              port: {{ .Values.filestore.image.internalPort }}
            initialDelaySeconds: {{ .Values.filestore.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.filestore.livenessProbe.periodSeconds }}
            failureThreshold: 1
            timeoutSeconds: {{ .Values.filestore.livenessProbe.timeoutSeconds }}
{{ toYaml .Values.filestore.resources | indent 12 }}
          {{- if .Values.persistence.filestore.enabled }}
          volumeMounts:
          - name: data
            mountPath: {{ .Values.persistence.filestore.data.mountPath }}
            subPath: {{ .Values.persistence.filestore.data.subPath }}
          {{- end }}
      {{- if .Values.persistence.filestore.enabled }}
      initContainers:
        - name: init-fs
          image: busybox
          # command to allow sfs to write to EFS volume.
          command: ["sh", "-c", "chown -R 33030:1000 {{ .Values.persistence.filestore.data.mountPath }}"]
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.filestore.data.mountPath }}
              subPath: {{ .Values.persistence.filestore.data.subPath }}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
      {{- end }}