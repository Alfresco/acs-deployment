{
	"info": {
		"_postman_id": "2b50d421-c5a4-4d0c-9967-242951216c63",
		"name": "acs-validate-volume-collection",
		"description": "This collection will test whether content created is still working when the acs pod is deleted and restarted.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "repo-discovery",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "40b11c33-7dcf-46d2-b946-52552d705df7",
						"exec": [
							"",
							"pm.globals.get(\"url\");",
							"",
							"",
							"pm.test(\"validateStatusCodeTest\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"validateLicenseTest\", function () {",
							"    pm.expect(jsonData.entry.repository.edition).to.be.oneOf([\"Enterprise\",\"Community\"]);",
							"    pm.environment.set(\"repositoryEdition\", jsonData.entry.repository.edition);",
							"});",
							"",
							"var modules = JSON.parse(responseBody).entry.repository.modules; ",
							"",
							"for (var module in modules){",
							"    var module = modules[module]",
							"    if (module.id == \"alfresco-aos-module\"){",
							"        console.log(module.version);",
							"        pm.environment.set(\"AOSversion\",module.version);",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{url}}/alfresco/api/discovery",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"alfresco",
						"api",
						"discovery"
					]
				},
				"description": "This request will validate whether the repo is set up correctly "
			},
			"response": []
		},
		{
			"name": "validate cluster get",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "166e8a89-e7d8-40ca-8ef9-cc0110041d15",
						"exec": [
							"pm.globals.get(\"url\");",
							"",
							"// only run this test if it's an Enterprise repo",
							"if (pm.environment.get(\"repositoryEdition\") == \"Enterprise\")",
							"{",
							"    /*",
							"    if you don't call this method first, the POST alfresco/s/enterprise/admin/admin-clustering-test fails",
							"    */",
							"    pm.test(\"callGetValidateClusterForInitializationTest\", function () ",
							"    {",
							"        pm.response.to.have.status(200);",
							"    });",
							"",
							"    pm.globals.set(\"alf-csrftoken\", pm.cookies.get(\"alf-csrftoken\"));",
							"} ",
							"else",
							"{",
							"    pm.test(\"testResponseStatusIs404ForCommunity\", function ()",
							"    {",
							"        pm.response.to.have.status(404);",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{url}}/alfresco/s/enterprise/admin/admin-clustering-test",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"alfresco",
						"s",
						"enterprise",
						"admin",
						"admin-clustering-test"
					]
				}
			},
			"response": []
		},
		{
			"name": "validate cluster after cluster restart",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2754bd8c-7dc6-4844-b4d6-0f29356655be",
						"exec": [
							"",
							"pm.globals.get(\"url\");",
							"",
							"// only run this test if it's an Enterprise repo",
							"if (pm.environment.get(\"repositoryEdition\") == \"Enterprise\")",
							"{",
							"    /*",
							"    this will fail if you don't call GET /alfresco/s/enterprise/admin/admin-clustering-test before this POST call",
							"    */",
							"    pm.test(\"callToTestWasOKTest\", function () {",
							"        pm.response.to.have.status(200);",
							"    });",
							"",
							"    pm.test(\"validateClusterTest\", function () {",
							"        var jsonData = pm.response.json();",
							"        ",
							"        var nodeNamesArray = jsonData.nodeNames;",
							"",
							"        console.log(nodeNamesArray);",
							"        pm.expect(nodeNamesArray.length).to.eq(2);",
							"        ",
							"        var tableDataArray= jsonData.tableData;",
							"        console.log(tableDataArray[0][0]);",
							"        console.log(tableDataArray[0][1]);",
							"        console.log(tableDataArray[1][0]);",
							"        console.log(tableDataArray[1][1]);",
							"        ",
							"        pm.expect(tableDataArray[0][1]).to.contain(\"success\");",
							"        pm.expect(tableDataArray[1][0]).to.contain(\"success\");",
							"        ",
							"        ",
							"    });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "alf-csrftoken",
						"value": "{{alf-csrftoken}} "
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{url}}/alfresco/s/enterprise/admin/admin-clustering-test",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"alfresco",
						"s",
						"enterprise",
						"admin",
						"admin-clustering-test"
					]
				},
				"description": "This request will validate whether the repo is set up correctly "
			},
			"response": []
		},
		{
			"name": "get folder after restart",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "33485682-f821-4fa3-97aa-c4f966ec0b92",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.environment.set(\"folderId\", \"MyFunkyNameForTestingPersistency folder does not exist\");",
							"var entries=pm.response.json().list.entries;",
							"for (i in entries)",
							"{",
							"    var entry=entries[i].entry;",
							"    console.log(\"entry \"+entry.id+\" \"+entry.name);",
							"    if(entry.name === \"MyFunkyNameForTestingPersistency\")",
							"    {",
							"        console.log(\"folderId SET \"+entry.id);",
							"        pm.environment.set(\"folderId\", entry.id);",
							"    }",
							"}",
							"",
							"console.log(\"folderId=\"+pm.environment.get(\"folderId\"));",
							"",
							"pm.test(\"folderFoundTest\", function () {",
							"    pm.expect(pm.environment.get(\"folderId\")).to.not.eq(\"MyFunkyNameForTestingPersistency folder does not exist\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{url}}/alfresco/api/-default-/public/alfresco/versions/1/nodes/-my-/children",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"alfresco",
						"api",
						"-default-",
						"public",
						"alfresco",
						"versions",
						"1",
						"nodes",
						"-my-",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "list content in folder after restart",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "367e8e82-0233-4612-ac45-0d6f598e7ac0",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"check number created\", function () {",
							"    pm.expect(jsonData.list.pagination.count).to.eql(2);",
							"});",
							"",
							"var entry = jsonData.list.entries[0].entry;",
							"pm.environment.set(\"contentId\", entry.id);",
							"pm.environment.set(\"contentName\", entry.name);",
							"pm.environment.set(\"contentLength\", entry.content.sizeInBytes);",
							"",
							"console.log(\"contentId:\"+pm.environment.get(\"contentId\"));",
							"console.log(\"contentName:\"+pm.environment.get(\"contentName\"));",
							"console.log(\"contentLength:\"+pm.environment.get(\"contentLength\"));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{url}}/alfresco/api/-default-/public/alfresco/versions/1/nodes/{{folderId}}/children",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"alfresco",
						"api",
						"-default-",
						"public",
						"alfresco",
						"versions",
						"1",
						"nodes",
						"{{folderId}}",
						"children"
					]
				}
			},
			"response": []
		},
		{
			"name": "get content after restart",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5b2f3d1a-3790-43c1-95a8-b01064015016",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content is correct\", function () {",
							"    pm.response.to.have.body(\"So Long, and Thanks for All the Fish!\");",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{url}}/alfresco/api/-default-/public/alfresco/versions/1/nodes/{{contentId}}/content",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"alfresco",
						"api",
						"-default-",
						"public",
						"alfresco",
						"versions",
						"1",
						"nodes",
						"{{contentId}}",
						"content"
					]
				}
			},
			"response": []
		},
		{
			"name": "search-api-validation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dc45439a-1398-43db-b23d-b20c0ee41c20",
						"exec": [
							"pm.globals.get(\"url\");",
							"",
							"pm.test(\"canUseSearchAPITest\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.environment.set(\"totalItems\", pm.response.json().list.pagination.totalItems);",
							"",
							"console.log(\"Total Items:\"+pm.environment.get(\"totalItems\"));",
							"",
							"pm.test(\"totalItems\", function () {",
							"    pm.expect(pm.environment.get(\"totalItems\")).not.eql(0)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"query\": {\r\n      \"query\": \"name:alfresco\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "https://{{url}}/alfresco/api/-default-/public/search/versions/1/search",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"alfresco",
						"api",
						"-default-",
						"public",
						"search",
						"versions",
						"1",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "search-cmis-validation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cb41a27f-13de-4595-8554-9f05eec47df5",
						"exec": [
							"pm.globals.get(\"url\");",
							"",
							"pm.test(\"canSearchWithCMISTest\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.environment.set(\"totalItems\", pm.response.json().list.pagination.totalItems);",
							"",
							"console.log(\"Total Items:\"+pm.environment.get(\"totalItems\"));",
							"",
							"pm.test(\"totalItems\", function () {",
							"    pm.expect(pm.environment.get(\"totalItems\")).not.eql(0)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"query\": {\r\n    \"query\": \"SELECT * FROM cmis:folder WHERE cmis:name = 'MyFunkyNameForTestingPersistency'\",\r\n    \"language\": \"cmis\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "https://{{url}}/alfresco/api/-default-/public/search/versions/1/search",
					"protocol": "https",
					"host": [
						"{{url}}"
					],
					"path": [
						"alfresco",
						"api",
						"-default-",
						"public",
						"search",
						"versions",
						"1",
						"search"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e58dd864-a77e-4cdb-b511-8a4f5ee746ec",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e8f135ff-80af-4524-aa2a-5dfe54551a6c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}
