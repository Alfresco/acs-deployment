{
	"info": {
		"_postman_id": "33a9f6b4-dfe2-4e7b-b016-ad94f8258c86",
		"name": "acs-test-collection",
		"description": "The Suite of cases tests ACS basic wiring:\n1) Acs-basic-auth\n* Request to validate the discovery api\n* Request to validate modules are applied correctly",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "01 ACS-basic-auth",
			"description": null,
			"item": [
				{
					"name": "repo-discovery",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "585e1183-573a-4966-86f0-739a8d0b9707",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.globals.get(\"url\");",
									"",
									"",
									"pm.test(\"validateStatusCodeTest\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"validateLicenseTest\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"ENTERPRISE\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/alfresco/api/discovery",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"alfresco",
								"api",
								"discovery"
							]
						},
						"description": "This request will validate whether the repo is set up correctly "
					},
					"response": []
				},
				{
					"name": "create a folder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "01836bc0-6d20-4e65-83d0-63032d0ac564",
								"type": "text/javascript",
								"exec": [
									"pm.globals.get(\"url\");",
									"",
									"pm.test(\"canCreateAFolderTest\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.environment.set(\"folderId\", pm.response.json().entry.id);",
									"pm.environment.set(\"folderName\", pm.response.json().entry.name);",
									"",
									"console.log(\"folderId:\"+pm.environment.get(\"folderId\"));",
									"console.log(\"folderName:\"+pm.environment.get(\"folderName\"));"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\":\"MyFunkyNameForTestingPersistency\",\r\n  \"nodeType\":\"cm:folder\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/alfresco/api/-default-/public/alfresco/versions/1/nodes/-my-/children?autoRename=true",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"alfresco",
								"api",
								"-default-",
								"public",
								"alfresco",
								"versions",
								"1",
								"nodes",
								"-my-",
								"children"
							],
							"query": [
								{
									"key": "autoRename",
									"value": "true"
								}
							]
						},
						"description": "This request will validate whether the repo is set up correctly "
					},
					"response": []
				},
				{
					"name": "create content in folder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "deddc0d6-1e30-46fb-be62-c2a4426f8bde",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"check number created\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.count).to.eql(2);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"folderPath\":\"{{folderName}}\",\r\n  \"fileCount\":\"2\",\r\n  \"forceBinaryStorage\":\"true\",\r\n  \"minFileSize\":\"22\",\r\n  \"maxFileSize\":\"42\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/alfresco/s/api/model/filefolder/load",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"alfresco",
								"s",
								"api",
								"model",
								"filefolder",
								"load"
							]
						}
					},
					"response": []
				},
				{
					"name": "list content in folder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3fab222a-0b9e-481b-a0b6-6610f4686083",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"check number created\", function () {",
									"    pm.expect(jsonData.list.pagination.count).to.eql(2);",
									"});",
									"",
									"var entry = jsonData.list.entries[0].entry;",
									"pm.environment.set(\"contentId\", entry.id);",
									"pm.environment.set(\"contentName\", entry.name);",
									"pm.environment.set(\"contentLength\", entry.content.sizeInBytes);",
									"",
									"console.log(\"contentId:\"+pm.environment.get(\"contentId\"));",
									"console.log(\"contentName:\"+pm.environment.get(\"contentName\"));",
									"console.log(\"contentLength:\"+pm.environment.get(\"contentLength\"));"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/alfresco/api/-default-/public/alfresco/versions/1/nodes/{{folderId}}/children",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"alfresco",
								"api",
								"-default-",
								"public",
								"alfresco",
								"versions",
								"1",
								"nodes",
								"{{folderId}}",
								"children"
							]
						}
					},
					"response": []
				},
				{
					"name": "set content",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c288f73-709e-4911-b747-2248233c58a6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "So Long, and Thanks for All the Fish!"
						},
						"url": {
							"raw": "http://{{url}}/alfresco/api/-default-/public/alfresco/versions/1/nodes/{{contentId}}/content",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"alfresco",
								"api",
								"-default-",
								"public",
								"alfresco",
								"versions",
								"1",
								"nodes",
								"{{contentId}}",
								"content"
							]
						}
					},
					"response": []
				},
				{
					"name": "get content",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d69c78e3-28d5-4679-8da9-37be961ede6b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content is correct\", function () {",
									"    pm.response.to.have.body(\"So Long, and Thanks for All the Fish!\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/alfresco/api/-default-/public/alfresco/versions/1/nodes/{{contentId}}/content",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"alfresco",
								"api",
								"-default-",
								"public",
								"alfresco",
								"versions",
								"1",
								"nodes",
								"{{contentId}}",
								"content"
							]
						}
					},
					"response": []
				},
				{
					"name": "validate cluster get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3c53ffc-ceb0-456d-875d-936587ed644e",
								"type": "text/javascript",
								"exec": [
									"pm.globals.get(\"url\");",
									"",
									"/*",
									"if you don't call this method first, the POST alfresco/s/enterprise/admin/admin-clustering-test fails",
									"*/",
									"pm.test(\"callGetValidateClusterForInitializationTest\", function () ",
									"{",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.globals.set(\"alf-csrftoken\", pm.cookies.get(\"alf-csrftoken\"));",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/alfresco/s/enterprise/admin/admin-clustering-test",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"alfresco",
								"s",
								"enterprise",
								"admin",
								"admin-clustering-test"
							]
						}
					},
					"response": []
				},
				{
					"name": "validate cluster",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7bafe63-7b54-4f24-8833-f36dadfb0a10",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.globals.get(\"url\");",
									"",
									"/*",
									" this will fail if you don't call GET /alfresco/s/enterprise/admin/admin-clustering-test before this POST call",
									"*/",
									"pm.test(\"callToTestWasOKTest\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"validateClusterTest\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    var nodeNamesArray = jsonData.nodeNames;",
									"",
									"    console.log(nodeNamesArray);",
									"    pm.expect(nodeNamesArray.length).to.eq(2);",
									"    ",
									"    var tableDataArray= jsonData.tableData;",
									"    console.log(tableDataArray[0][0]);",
									"    console.log(tableDataArray[0][1]);",
									"    console.log(tableDataArray[1][0]);",
									"    console.log(tableDataArray[1][1]);",
									"    ",
									"    pm.expect(tableDataArray[0][1]).to.contain(\"success\");",
									"    pm.expect(tableDataArray[1][0]).to.contain(\"success\");",
									"    ",
									"    ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "alf-csrftoken",
								"value": "{{alf-csrftoken}} "
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/alfresco/s/enterprise/admin/admin-clustering-test",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"alfresco",
								"s",
								"enterprise",
								"admin",
								"admin-clustering-test"
							]
						},
						"description": "This request will validate whether the repo is set up correctly "
					},
					"response": []
				},
				{
					"name": "Validate-share module",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d10443d-f20c-4b9a-936e-bd08308c8683",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.globals.get(\"url\");",
									"",
									"pm.test(\"shareIsUpAndRunningTest\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"/* Disabled for DEPLOY-401",
									"pm.test(\"rm is installed part of share\", function () {",
									"pm.expect(pm.response.text()).to.include(\"Alfresco :: Records Management Global Customization - Enterprise\");",
									"});",
									"*/"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/share/page/modules/deploy",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"share",
								"page",
								"modules",
								"deploy"
							]
						},
						"description": "Validate Share is deployed correctly"
					},
					"response": []
				},
				{
					"name": "google-docs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67b4ade6-51d1-4549-9091-ec8c1f2f005d",
								"type": "text/javascript",
								"exec": [
									"pm.globals.get(\"url\");",
									"",
									"pm.test(\"validateGoogleDocsImageTest\", function () ",
									"{",
									"    pm.response.to.have.status(200);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/share/res/components/documentlibrary/actions/google-edit-flat-16.png",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"share",
								"res",
								"components",
								"documentlibrary",
								"actions",
								"google-edit-flat-16.png"
							]
						}
					},
					"response": []
				},
				{
					"name": "solr-validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "96f54e8e-a8bd-4d66-94e5-94e925d8ba6b",
								"type": "text/javascript",
								"exec": [
									"pm.globals.get(\"url\");",
									"",
									"/* Search and discovery team needs to add solr tests here",
									"the following failed while they worked on the insight-engine integration",
									"*/",
									"",
									" ",
									"pm.test(\"solrStatusCodeTest\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"solrResponseTest\", function() {",
									"   var jsonData = pm.response.json();",
									"    var modulesArray= jsonData.resultset.queryInfo;",
									"    for(var key in modulesArray)",
									"    {",
									"        var obj = modulesArray[key];",
									"        var id = obj.numberFound;",
									"        console.log(id);",
									"        pm.expect(id).to.be.eql(\"189\");",
									"    }    ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/alfresco/s/api/solrstats",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"alfresco",
								"s",
								"api",
								"solrstats"
							]
						}
					},
					"response": []
				},
				{
					"name": "share-alfresco-proxy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e0ea8602-4fb5-4378-9eea-ddb04934654b",
								"type": "text/javascript",
								"exec": [
									"pm.globals.get(\"url\");",
									"",
									"pm.test(\"searchAlfrescoProxyStatusCodeTest\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/share/service/proxy/alfresco/api/solr/aclchangesets?fromId=1&maxResults=5",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"share",
								"service",
								"proxy",
								"alfresco",
								"api",
								"solr",
								"aclchangesets"
							],
							"query": [
								{
									"key": "fromId",
									"value": "1"
								},
								{
									"key": "maxResults",
									"value": "5"
								}
							]
						},
						"description": "Check share access to alfresco via proxy is forbidden for some regex patterns"
					},
					"response": []
				},
				{
					"name": "solr-external-access",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d0719d6-94f4-4515-bd67-cf2856866fde",
								"type": "text/javascript",
								"exec": [
									"pm.globals.get(\"url\");",
									"",
									"pm.test(\"solrExternalAccessStatusCodeTest\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/solr",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"solr"
							]
						},
						"description": "Check to confirm `/solr` endpoint is disabled."
					},
					"response": []
				},
				{
					"name": "webdav-validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00be9c05-0609-4e20-bc1f-55e41082ff10",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Directory listing for /\");",
									"    pm.expect(pm.response.text()).to.include(\"Shared\");",
									"    pm.expect(pm.response.text()).to.include(\"Sites\");",
									"    pm.expect(pm.response.text()).to.include(\"Data Dictionary\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/alfresco/webdav",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"alfresco",
								"webdav"
							]
						}
					},
					"response": []
				},
				{
					"name": "aos-validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "71e66d76-b22b-43b0-a615-e35254b927de",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"/alfresco/aos\");",
									"    pm.expect(pm.response.text()).to.include(\"Shared\");",
									"    pm.expect(pm.response.text()).to.include(\"Sites\");",
									"    pm.expect(pm.response.text()).to.include(\"Data Dictionary\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/alfresco/aos",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"alfresco",
								"aos"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d3d29c75-6249-47a2-a5a4-6c565d86521b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c685c9b9-3ef9-47df-9308-e1001365c38c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}