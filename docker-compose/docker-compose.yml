name: docker-compose
services:
  activemq:
    healthcheck:
      test:
        - CMD
        - /opt/activemq/bin/activemq
        - query
        - --objname
        - type=Broker,brokerName=*,service=Health
        - '|'
        - grep
        - Good
      timeout: 5s
      interval: 10s
      retries: 5
      start_period: 5s
    image: quay.io/alfresco/alfresco-activemq:5.18-jre17-rockylinux8
    mem_limit: "1073741824"
    networks:
      default: null
    ports:
      - "8161:8161"
      - "5672:5672"
      - "61616:61616"
      - "61613:61613"
  alfresco:
    environment:
      JAVA_OPTS: -Ddb.driver=org.postgresql.Driver -Ddb.username=alfresco -Ddb.password=alfresco -Ddb.url=jdbc:postgresql://postgres:5432/alfresco -Dindex.subsystem.name=elasticsearch -Delasticsearch.createIndexIfNotExists=true -Delasticsearch.host=elasticsearch -Delasticsearch.port=9200 -Dshare.host=localhost -Dshare.port=8080 -Dalfresco.host=localhost -Dalfresco.port=8080 -Dcsrf.filter.enabled=false -Daos.baseUrlOverwrite=http://localhost:8080/alfresco/aos -Dmessaging.broker.url="failover:(nio://activemq:61616)?timeout=3000&jms.useCompression=true" -Ddeployment.method=DOCKER_COMPOSE -Dtransform.service.enabled=true -Dtransform.service.url=http://transform-router:8095 -Dsfs.url=http://shared-file-store:8099/ -DlocalTransform.core-aio.url=http://transform-core-aio:8090/ -Ddsync.service.uris=http://localhost:9090/alfresco -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
      JAVA_TOOL_OPTIONS: -Dencryption.keystore.type=JCEKS -Dencryption.cipherAlgorithm=DESede/CBC/PKCS5Padding -Dencryption.keyAlgorithm=DESede -Dencryption.keystore.location=/usr/local/tomcat/shared/classes/alfresco/extension/keystore/keystore -Dmetadata-keystore.password=mp6yc0UD9e -Dmetadata-keystore.aliases=metadata -Dmetadata-keystore.metadata.password=oKIWzVdEdA -Dmetadata-keystore.metadata.algorithm=DESede
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8080/alfresco/api/-default-/public/alfresco/versions/1/probes/-ready-
      timeout: 3s
      interval: 30s
      retries: 5
      start_period: 1m0s
    image: quay.io/alfresco/alfresco-content-repository:25.2.0
    labels:
      traefik.enable: "true"
      traefik.http.middlewares.acsfakeauth.basicauth.users: 'fake:'
      traefik.http.middlewares.alfresco-chain.chain.middlewares: alfresco-root-redirect@docker,limit@docker
      traefik.http.middlewares.alfresco-root-redirect.redirectregex.regex: ^https?://[^/]+/([^/.]+)$$
      traefik.http.middlewares.alfresco-root-redirect.redirectregex.replacement: $$0/
      traefik.http.middlewares.limit.buffering.maxRequestBodyBytes: "5368709120"
      traefik.http.middlewares.prometheusipfilter.ipallowlist.sourcerange: 127.0.0.0/8
      traefik.http.routers.alfresco.middlewares: alfresco-chain@docker
      traefik.http.routers.alfresco.rule: PathPrefix(`/`)
      traefik.http.routers.alfrescomicrometer.middlewares: prometheusipfilter@docker
      traefik.http.routers.alfrescomicrometer.rule: PathRegexp(`^/alfresco/(wc)?s(ervice)?/prometheus`)
      traefik.http.routers.solrapideny.middlewares: acsfakeauth@docker
      traefik.http.routers.solrapideny.rule: PathRegexp(`^/alfresco/(wc)?s(ervice)?/api/solr/.*$$`)
      traefik.http.services.alfresco.loadbalancer.server.port: "8080"
    mem_limit: "1992294400"
    networks:
      default: null
    volumes:
      - /usr/local/tomcat/alf_data
  audit-storage:
    depends_on:
      activemq:
        condition: service_healthy
        required: true
      elasticsearch:
        condition: service_healthy
        required: true
    environment:
      AUDIT_ENTRYSTORAGE_OPENSEARCH_CONNECTOR_PASSWORD: admin
      AUDIT_ENTRYSTORAGE_OPENSEARCH_CONNECTOR_URI: http://elasticsearch:9200
      AUDIT_ENTRYSTORAGE_OPENSEARCH_CONNECTOR_USERNAME: admin
      AUDIT_EVENTINGESTION_URI: activemq:topic:alfresco.repo.event2
      SPRING_ACTIVEMQ_BROKERURL: failover:(nio://activemq:61616)?timeout=3000
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8081/actuator/health/readiness
      timeout: 2s
      interval: 1m0s
      retries: 3
      start_period: 15s
    image: quay.io/alfresco/alfresco-audit-storage:1.1.0
    mem_limit: "536870912"
    networks:
      default: null
  control-center:
    environment:
      APP_CONFIG_AUTH_TYPE: BASIC
      APP_CONFIG_PROVIDER: ECM
      BASE_PATH: ./
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8080/
      timeout: 1s
      interval: 10s
      retries: 3
      start_period: 1s
    image: quay.io/alfresco/alfresco-control-center:10.0.1
    labels:
      traefik.enable: "true"
      traefik.http.middlewares.accchain.chain.middlewares: accforceslash,accroot
      traefik.http.middlewares.accforceslash.redirectregex.regex: ^(.*/(admin|control-center))$$
      traefik.http.middlewares.accforceslash.redirectregex.replacement: $${1}/
      traefik.http.middlewares.accroot.stripprefix.prefixes: /admin,/control-center
      traefik.http.routers.acc.middlewares: accchain@docker
      traefik.http.routers.acc.rule: PathPrefix(`/control-center`) || PathPrefix(`/admin`)
      traefik.http.services.control-center.loadbalancer.server.port: "8080"
    mem_limit: "134217728"
    networks:
      default: null
  digital-workspace:
    environment:
      APP_BASE_SHARE_URL: http://localhost:8080/workspace/#/preview/s
      APP_CONFIG_AUTH_TYPE: BASIC
      APP_CONFIG_PLUGIN_MICROSOFT_ONLINE: "false"
      APP_CONFIG_PLUGIN_PROCESS_SERVICE: "false"
      APP_CONFIG_PROVIDER: ECM
      BASE_PATH: ./
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8080/
      timeout: 1s
      interval: 10s
      retries: 3
      start_period: 1s
    image: quay.io/alfresco/alfresco-digital-workspace:7.0.1
    labels:
      traefik.enable: "true"
      traefik.http.middlewares.adwchain.chain.middlewares: adwforceslash,adwroot
      traefik.http.middlewares.adwforceslash.redirectregex.regex: ^(.*/workspace)$$
      traefik.http.middlewares.adwforceslash.redirectregex.replacement: $${1}/
      traefik.http.middlewares.adwroot.stripprefix.prefixes: /workspace
      traefik.http.routers.adw.middlewares: adwchain@docker
      traefik.http.routers.adw.rule: PathPrefix(`/workspace`)
      traefik.http.services.digital-workspace.loadbalancer.server.port: "8080"
    mem_limit: "134217728"
    networks:
      default: null
  elasticsearch:
    cap_add:
      - IPC_LOCK
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
    healthcheck:
      test:
        - CMD-SHELL
        - curl -s -X GET http://localhost:9200/_cluster/health?pretty | grep status | grep -q '\(green\|yellow\)'
      timeout: 10s
      interval: 10s
      retries: 5
      start_period: 30s
    image: elasticsearch:8.17.3
    networks:
      default: null
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
  kibana:
    depends_on:
      elasticsearch:
        condition: service_healthy
        required: true
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - -o
        - /dev/null
        - http://localhost:5601/status
      timeout: 2s
      interval: 10s
      retries: 5
      start_period: 30s
    image: kibana:7.17.26
    mem_limit: "1073741824"
    networks:
      default: null
    ports:
      - "5601:5601"
  postgres:
    command:
      - postgres
      - -c
      - max_connections=300
      - -c
      - log_min_messages=LOG
    environment:
      POSTGRES_DB: alfresco
      POSTGRES_PASSWORD: alfresco
      POSTGRES_USER: alfresco
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 3s
      interval: 10s
      retries: 3
      start_period: 5s
    image: postgres:16.5
    mem_limit: "536870912"
    networks:
      default: null
    ports:
      - "5432:5432"
  proxy:
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:8080
      - --entrypoints.web.transport.respondingTimeouts.readTimeout=20m
      - --entryPoints.traefik.address=:8888
      - --accesslog=true
      - --providers.docker.exposedByDefault=false
      - --ping.entrypoint=web
      - --ping=true
    healthcheck:
      test:
        - CMD
        - traefik
        - healthcheck
        - --ping
      timeout: 10s
      interval: 20s
      retries: 3
      start_period: 10s
    image: traefik:3.1
    mem_limit: "134217728"
    networks:
      default: null
    ports:
      - "8080:8080"
      - "8888:8888"
    security_opt:
      - label=disable
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  search:
    depends_on:
      elasticsearch:
        condition: service_healthy
        required: true
      shared-file-store:
        condition: service_healthy
        required: true
      transform-core-aio:
        condition: service_healthy
        required: true
    environment:
      ALFRESCO_ACCEPTED_CONTENT_MEDIA_TYPES_CACHE_BASE_URL: http://transform-core-aio:8090/transform/config
      ALFRESCO_SHAREDFILESTORE_BASEURL: http://shared-file-store:8099/alfresco/api/-default-/private/sfs/versions/1/file/
      SPRING_ACTIVEMQ_BROKERURL: nio://activemq:61616
      SPRING_ELASTICSEARCH_REST_URIS: http://elasticsearch:9200
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8080/actuator/health
      timeout: 2s
      interval: 20s
      retries: 3
      start_period: 20s
    image: quay.io/alfresco/alfresco-elasticsearch-live-indexing:5.1.1
    mem_limit: "1073741824"
    networks:
      default: null
  search-reindexing:
    depends_on:
      alfresco:
        condition: service_healthy
        required: true
      elasticsearch:
        condition: service_healthy
        required: true
      postgres:
        condition: service_healthy
        required: true
    environment:
      ALFRESCO_ACCEPTED_CONTENT_MEDIA_TYPES_CACHE_BASE_URL: http://transform-core-aio:8090/transform/config
      SPRING_ACTIVEMQ_BROKERURL: nio://activemq:61616
      SPRING_DATASOURCE_PASSWORD: alfresco
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/alfresco
      SPRING_DATASOURCE_USERNAME: alfresco
      SPRING_ELASTICSEARCH_REST_URIS: http://elasticsearch:9200
    image: quay.io/alfresco/alfresco-elasticsearch-reindexing:5.1.1
    mem_limit: "1073741824"
    networks:
      default: null
    restart: on-failure:5
  share:
    depends_on:
      alfresco:
        condition: service_healthy
        required: true
    environment:
      CSRF_FILTER_ORIGIN: http://localhost:8080
      CSRF_FILTER_REFERER: http://localhost:8080/share/.*
      JAVA_OPTS: -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80 -Dalfresco.host=localhost -Dalfresco.port=8080 -Dalfresco.context=alfresco -Dalfresco.protocol=http
      REPO_HOST: alfresco
      REPO_PORT: "8080"
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8080/share
      timeout: 2s
      interval: 20s
      retries: 3
      start_period: 15s
    image: quay.io/alfresco/alfresco-share:25.2.0
    labels:
      traefik.enable: "true"
      traefik.http.middlewares.limit.buffering.maxRequestBodyBytes: "5368709120"
      traefik.http.middlewares.share-chain.chain.middlewares: share-root-redirect@docker,limit@docker
      traefik.http.middlewares.share-root-redirect.redirectregex.regex: /share$$
      traefik.http.middlewares.share-root-redirect.redirectregex.replacement: /share/
      traefik.http.middlewares.sharefakeauth.basicauth.users: 'fake:'
      traefik.http.routers.proxiedsolrapideny.middlewares: sharefakeauth@docker
      traefik.http.routers.proxiedsolrapideny.rule: PathRegexp(`^/share/proxy/alfresco(-(noauth|feed|api))?/api/solr/`)
      traefik.http.routers.share.middlewares: share-chain@docker
      traefik.http.routers.share.rule: PathPrefix(`/share`)
      traefik.http.services.share.loadbalancer.server.port: "8080"
    mem_limit: "1073741824"
    networks:
      default: null
  shared-file-store:
    environment:
      JAVA_OPTS: -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
      scheduler.cleanup.interval: "86400000"
      scheduler.content.age.millis: "86400000"
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8099/ready
      timeout: 2s
      interval: 20s
      retries: 3
      start_period: 10s
    image: quay.io/alfresco/alfresco-shared-file-store:4.2.0
    mem_limit: "536870912"
    networks:
      default: null
    ports:
      - "8099:8099"
    volumes:
      - /tmp/Alfresco
  sync-service:
    depends_on:
      alfresco:
        condition: service_healthy
        required: true
      postgres:
        condition: service_healthy
        required: true
    environment:
      JAVA_OPTS: -Dsync.cluster.enabled=false -Dsql.db.driver=org.postgresql.Driver -Dsql.db.url=jdbc:postgresql://postgres:5432/alfresco -Dsql.db.username=alfresco -Dsql.db.password=alfresco -Dmessaging.broker.host=activemq -Drepo.hostname=alfresco -Drepo.port=8080 -Ddw.server.applicationConnectors[0].type=http -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:9090/alfresco/healthcheck
      timeout: 2s
      interval: 30s
      retries: 3
      start_period: 20s
    image: quay.io/alfresco/service-sync:5.2.0
    labels:
      traefik.enable: "true"
      traefik.http.middlewares.syncservice.replacepathregex.regex: ^/syncservice/(.*)
      traefik.http.middlewares.syncservice.replacepathregex.replacement: /alfresco/$$1
      traefik.http.routers.syncservice.middlewares: syncservice@docker
      traefik.http.routers.syncservice.rule: PathPrefix(`/syncservice`)
      traefik.http.services.sync-service.loadbalancer.server.port: "9090"
    mem_limit: "1073741824"
    networks:
      default: null
    ports:
      - "9090:9090"
  transform-core-aio:
    depends_on:
      activemq:
        condition: service_healthy
        required: true
      shared-file-store:
        condition: service_healthy
        required: true
    environment:
      ACTIVEMQ_URL: nio://activemq:61616
      FILE_STORE_URL: http://shared-file-store:8099/alfresco/api/-default-/private/sfs/versions/1/file
      JAVA_OPTS: -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8090/ready
      timeout: 2s
      interval: 20s
      retries: 3
      start_period: 10s
    image: quay.io/alfresco/alfresco-transform-core-aio:5.2.0
    mem_limit: "1610612736"
    networks:
      default: null
    ports:
      - "8090:8090"
  transform-router:
    depends_on:
      activemq:
        condition: service_healthy
        required: true
      shared-file-store:
        condition: service_healthy
        required: true
    environment:
      ACTIVEMQ_URL: nio://activemq:61616
      CORE_AIO_URL: http://transform-core-aio:8090
      FILE_STORE_URL: http://shared-file-store:8099/alfresco/api/-default-/private/sfs/versions/1/file
      JAVA_OPTS: -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8095/actuator/health
      timeout: 2s
      interval: 10s
      retries: 3
      start_period: 20s
    image: quay.io/alfresco/alfresco-transform-router:4.2.0
    mem_limit: "536870912"
    networks:
      default: null
    ports:
      - "8095:8095"
networks:
  default:
    name: docker-compose_default
