# This docker-compose file will spin up an ACS cluster on a local host.
# It requires a minimum of 13GB Memory to distribute among containers.
#
# For performance tuning, assign the container memory and give a percentage of
# it to the JVM. Use either the -Xms,-Xmx flags or the newly added flags in
# java 10+: -XX:MaxRAMPercentage and -XX:MinRAMPercentage.
# More details here:
# https://www.oracle.com/technetwork/java/javase/10-relnote-issues-4108729.html
#
# Note: The docker-compose file from github.com is a limited trial that goes
# into read-only mode after 2 days. Get the latest docker-compose.yml file with
# a 30-day trial license by accessing the Alfresco Content Services trial
# download page at:
# https://www.alfresco.com/platform/content-services-ecm/trial/download
#
# Java processes requires setting -XX:MaxRAM= due to cgroupv2 changes in recent Linux kernels
# https://hub.alfresco.com/t5/alfresco-content-services-blog/acs-containers-and-cgroup-v2-in-acs-up-to-7-2/ba-p/318039
#
services:
  alfresco:
    image: quay.io/alfresco/alfresco-content-repository:7.2.2.5
    mem_limit: 1900m
    environment:
      JAVA_TOOL_OPTIONS: >-
        -Dencryption.keystore.type=JCEKS
        -Dencryption.cipherAlgorithm=DESede/CBC/PKCS5Padding
        -Dencryption.keyAlgorithm=DESede
        -Dencryption.keystore.location=/usr/local/tomcat/shared/classes/alfresco/extension/keystore/keystore
        -Dmetadata-keystore.password=mp6yc0UD9e
        -Dmetadata-keystore.aliases=metadata
        -Dmetadata-keystore.metadata.password=oKIWzVdEdA
        -Dmetadata-keystore.metadata.algorithm=DESede
      JAVA_OPTS: >-
        -Ddb.driver=org.postgresql.Driver
        -Ddb.username=alfresco
        -Ddb.password=alfresco
        -Ddb.url=jdbc:postgresql://postgres:5432/alfresco
        -Dsolr.host=solr6
        -Dsolr.port=8983
        -Dsolr.secureComms=secret
        -Dsolr.sharedSecret=secret
        -Dsolr.base.url=/solr
        -Dindex.subsystem.name=solr6
        -Dshare.host=127.0.0.1
        -Dshare.port=8080
        -Dalfresco.host=localhost
        -Dalfresco.port=8080
        -Daos.baseUrlOverwrite=http://localhost:8080/alfresco/aos
        -Dmessaging.broker.url="failover:(nio://activemq:61616)?timeout=3000&jms.useCompression=true"
        -Ddeployment.method=DOCKER_COMPOSE
        -Dtransform.service.enabled=true
        -Dtransform.service.url=http://transform-router:8095
        -Dsfs.url=http://shared-file-store:8099/
        -DlocalTransform.core-aio.url=http://transform-core-aio:8090/
        -Dcsrf.filter.enabled=false
        -Ddsync.service.uris=http://localhost:9090/alfresco
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
        -XX:MaxRAM=1900m
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alfresco.rule=PathPrefix(`/`)"
      - "traefik.http.services.alfresco.loadbalancer.server.port=8080"
      - "traefik.http.routers.solrapideny.rule=PathRegexp(`^/alfresco/(wc)?s(ervice)?/api/solr/`)"
      - "traefik.http.middlewares.acsfakeauth.basicauth.users=fake:"
      - "traefik.http.routers.solrapideny.middlewares=acsfakeauth@docker"
      - "traefik.http.routers.alfrescomicrometer.rule=PathRegexp(`^/alfresco/(wc)?s(ervice)?/prometheus`)"
      - "traefik.http.middlewares.prometheusipfilter.ipallowlist.sourcerange=127.0.0.0/8"
      - "traefik.http.routers.alfrescomicrometer.middlewares=prometheusipfilter@docker"
  transform-router:
    mem_limit: 512m
    image: quay.io/alfresco/alfresco-transform-router:2.1.2
    environment:
      JAVA_OPTS: >-
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
        -XX:MaxRAM=512m
      ACTIVEMQ_URL: nio://activemq:61616
      CORE_AIO_URL: http://transform-core-aio:8090
      FILE_STORE_URL: >-
        http://shared-file-store:8099/alfresco/api/-default-/private/sfs/versions/1/file
    ports:
      - "8095:8095"
    links:
      - activemq
  transform-core-aio:
    image: alfresco/alfresco-transform-core-aio:3.1.2
    mem_limit: 1536m
    environment:
      JAVA_OPTS: >-
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
        -XX:MaxRAM=1536m
      ACTIVEMQ_URL: nio://activemq:61616
      FILE_STORE_URL: >-
        http://shared-file-store:8099/alfresco/api/-default-/private/sfs/versions/1/file
    ports:
      - "8090:8090"
    links:
      - activemq
  shared-file-store:
    image: quay.io/alfresco/alfresco-shared-file-store:2.1.2
    mem_limit: 512m
    environment:
      JAVA_OPTS: >-
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
        -XX:MaxRAM=512m
      scheduler.content.age.millis: 86400000
      scheduler.cleanup.interval: 86400000
    ports:
      - "8099:8099"
    volumes:
      - shared-file-store-volume:/tmp/Alfresco/sfs
  share:
    image: quay.io/alfresco/alfresco-share:7.2.2.5
    mem_limit: 1g
    environment:
      CSRF_FILTER_ORIGIN: http://localhost:8080
      CSRF_FILTER_REFERER: http://localhost:8080/share/.*
      REPO_HOST: "alfresco"
      REPO_PORT: "8080"
      JAVA_OPTS: >-
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
        -XX:MaxRAM=1g
        -Dalfresco.host=localhost
        -Dalfresco.port=8080
        -Dalfresco.context=alfresco
        -Dalfresco.protocol=http
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.share.rule=PathPrefix(`/share`)"
      - "traefik.http.services.share.loadbalancer.server.port=8080"
      - "traefik.http.routers.proxiedsolrapideny.rule=PathRegexp(`^/share/proxy/alfresco(-(noauth|feed|api))?/api/solr/`)"
      - "traefik.http.middlewares.sharefakeauth.basicauth.users=fake:"
      - "traefik.http.routers.proxiedsolrapideny.middlewares=sharefakeauth@docker"
  postgres:
    image: postgres:13.3
    mem_limit: 512m
    environment:
      - POSTGRES_PASSWORD=alfresco
      - POSTGRES_USER=alfresco
      - POSTGRES_DB=alfresco
    command: postgres -c max_connections=300 -c log_min_messages=LOG
    ports:
      - "5432:5432"
  solr6:
    image: quay.io/alfresco/search-services:2.0.12
    mem_limit: 2g
    environment:
      # Solr needs to know how to register itself with Alfresco
      SOLR_ALFRESCO_HOST: "alfresco"
      SOLR_ALFRESCO_PORT: "8080"
      # Alfresco needs to know how to call solr
      SOLR_SOLR_HOST: "solr6"
      SOLR_SOLR_PORT: "8983"
      # Create the default alfresco and archive cores
      SOLR_CREATE_ALFRESCO_DEFAULTS: "alfresco,archive"
      # HTTPS or SECRET
      ALFRESCO_SECURE_COMMS: "secret"
      # SHARED SECRET VALUE
      JAVA_TOOL_OPTIONS: >-
        -Dalfresco.secureComms.secret=secret
    ports:
      - "8083:8983" # Browser port
  activemq:
    image: alfresco/alfresco-activemq:5.17-jre17-rockylinux8
    mem_limit: 1g
    ports:
      - "8161:8161" # Web Console
      - "5672:5672" # AMQP
      - "61616:61616" # OpenWire
      - "61613:61613" # STOMP
  digital-workspace:
    image: quay.io/alfresco/alfresco-digital-workspace:4.4.1
    mem_limit: 128m
    environment:
      APP_CONFIG_AUTH_TYPE: "BASIC"
      BASE_PATH: ./
      APP_BASE_SHARE_URL: "http://localhost:8080/workspace/#/preview/s"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adw.rule=PathPrefix(`/workspace`)"
      - "traefik.http.middlewares.adfroot.stripprefix.prefixes=/workspace"
      - "traefik.http.middlewares.adwforceslash.redirectregex.regex=^(.*/workspace)$$"
      - "traefik.http.middlewares.adwforceslash.redirectregex.replacement=$${1}/"
      - "traefik.http.middlewares.adwroot.stripprefix.prefixes=/workspace"
      - "traefik.http.middlewares.adwchain.chain.middlewares=adwforceslash,adwroot"
      - "traefik.http.routers.adw.middlewares=adwchain@docker"
  control-center:
    image: quay.io/alfresco/alfresco-control-center:7.9.0
    mem_limit: 128m
    environment:
      APP_CONFIG_PROVIDER: "ECM"
      APP_CONFIG_AUTH_TYPE: "BASIC"
      BASE_PATH: ./
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.acc.rule=PathPrefix(`/admin`)"
      - "traefik.http.middlewares.accroot.stripprefix.prefixes=/admin"
      - "traefik.http.middlewares.accforceslash.redirectregex.regex=^(.*/admin)$$"
      - "traefik.http.middlewares.accforceslash.redirectregex.replacement=$${1}/"
      - "traefik.http.middlewares.accchain.chain.middlewares=accforceslash,accroot"
      - "traefik.http.routers.acc.middlewares=accchain@docker"
  proxy:
    image: traefik:3.1
    mem_limit: 128m
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:8080"
      - "--entryPoints.traefik.address=:8888"
      - "--accesslog=true"
      - "--providers.docker.exposedByDefault=false"
    ports:
      - "8080:8080"
      - "8888:8888"
    security_opt:
      - label=disable
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  sync-service:
    image: quay.io/alfresco/service-sync:3.11.3
    mem_limit: 1g
    environment:
      JAVA_OPTS: >-
        -Dsql.db.driver=org.postgresql.Driver
        -Dsql.db.url=jdbc:postgresql://postgres:5432/alfresco
        -Dsql.db.username=alfresco
        -Dsql.db.password=alfresco
        -Dmessaging.broker.host=activemq
        -Drepo.hostname=alfresco
        -Drepo.port=8080
        -Ddw.server.applicationConnectors[0].type=http
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
        -XX:MaxRAM=1g
    ports:
      - "9090:9090"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.syncservice.rule=PathPrefix(`/syncservice`)"
      - "traefik.http.services.sync-service.loadbalancer.server.port=9090"
      - "traefik.http.middlewares.syncservice.replacepathregex.regex=^/syncservice/(.*)"
      - "traefik.http.middlewares.syncservice.replacepathregex.replacement=/alfresco/$$1"
      - "traefik.http.routers.syncservice.middlewares=syncservice@docker"
volumes:
  shared-file-store-volume:
    driver_opts:
      type: tmpfs
      device: tmpfs
