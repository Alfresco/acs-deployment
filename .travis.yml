language: python
python:
  - "3.8.2"

os: linux
dist: xenial

services:
  - docker

import:
  - Alfresco/alfresco-process-tools:.travis.helm.yml@master
  - Alfresco/alfresco-process-tools:.travis.kubernetes_install.yml@master
  - Alfresco/alfresco-process-tools:.travis.docker_login.yml@master

env:
  global:
    - TRAVIS_WAIT_TIMEOUT=${TRAVIS_WAIT_TIMEOUT:-30}
    - BRANCH=${TRAVIS_PULL_REQUEST_BRANCH:-${TRAVIS_BRANCH}}
    - HELM_REPO_BASE_URL=https://kubernetes-charts.alfresco.com
    - HELM_REPO=stable
    - KUBERNETES_VERSION=1.18.4
    - HELM_VERSION=${HELM_VERSION:-3.2.4}

branches:
  only:
    - OPSEXP-115

before_install:
  - |
    pip install --upgrade awscli
    curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.8/2020-04-16/bin/linux/amd64/aws-iam-authenticator
    curl -o aws-iam-authenticator.sha256 https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.8/2020-04-16/bin/linux/amd64/aws-iam-authenticator.sha256
    openssl sha1 -sha256 aws-iam-authenticator
    chmod +x ./aws-iam-authenticator
    mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
    export PATH=$PATH:$HOME/bin
    aws eks update-kubeconfig --name acs-cluster --region=eu-west-1

before_script:
  - |
    REPO_NAME=${TRAVIS_REPO_SLUG##*/}
    PROJECT_NAME=alfresco-content-services
    helm repo add activiti https://activiti.github.io/activiti-cloud-helm-charts
    helm repo add alfresco ${HELM_REPO_BASE_URL}/stable
    helm repo add stable https://kubernetes-charts.storage.googleapis.com
    if [[ "${TRAVIS_BRANCH}" != *"support/"* ]]
    then
      export HELM_REPO=incubator
      helm repo add alfresco-incubator ${HELM_REPO_BASE_URL}/${HELM_REPO}
    fi
    helm repo update
    echo using PROJECT_NAME=${PROJECT_NAME},BRANCH=${BRANCH},HELM_REPO=${HELM_REPO}


after_success: |
  if [[ "$TRAVIS_COMMIT_MESSAGE" != *"[keep env]"* ]]; then
    helm delete $release_name_ingress $release_name_acs -n $namespace
    kubectl delete namespace $namespace
  fi
after_failure: |
  if [[ "$TRAVIS_COMMIT_MESSAGE" != *"[keep env]"* ]]; then
    helm delete $release_name_ingress $release_name_acs -n $namespace
    kubectl delete namespace $namespace
  fi

jobs:
  include:
    - name: Deploy Chart for latest and Run Postman Checks
      stage: test
      script: |
        set -e
        namespace=$(echo ${TRAVIS_BRANCH} | cut -c1-28 | tr /_ - | tr -d [:punct:] | awk '{print tolower($0)}')-${TRAVIS_BUILD_NUMBER}
        release_name_ingress=ing-${TRAVIS_BUILD_NUMBER}
        release_name_acs=acs-${TRAVIS_BUILD_NUMBER}
        values_file=helm/alfresco-content-services/values.yaml
    - name: Deploy Chart for SP2.N and Run Postman Checks
      stage: test
      script: |
        set -e
        namespace=$(echo ${TRAVIS_BRANCH} | cut -c1-28 | tr /_ - | tr -d [:punct:] | awk '{print tolower($0)}')-sp2n-${TRAVIS_BUILD_NUMBER}
        release_name_ingress=ing2n-${TRAVIS_BUILD_NUMBER}
        release_name_acs=acs2n-${TRAVIS_BUILD_NUMBER}
        values_file=helm/older-versions/SP.2.N.yaml
        ./.travis/deploy-acs.sh
    - name: Deploy Docker Compose and Run Postman Checks
      stage: test
      script: |
        cd docker-compose
        /bin/bash startup.sh
        cd ../test/postman/docker-compose
        docker run -a STDOUT --volume $PWD:/etc/newman --network host postman/newman_alpine33:3.9.2 run "acs-test-docker-compose-collection.json" --insecure --global-var "protocol=http" --global-var "url=localhost:8080"
      after_success: |
        echo "nothing to cleanup"
      after_failure: |
        docker-compose logs --no-color